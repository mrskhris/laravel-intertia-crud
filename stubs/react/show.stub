import React, { useState } from 'react';
import { Link, router, useForm } from '@inertiajs/react';
import {
  Button,
  ConfirmModal,
  Modal,
  ModalActions,
  ModalBody,
  ModalHeader,
  TextField,
  Textarea
} from '@wedevs/tail-react';
import {
  ChevronLeftIcon,
  PencilSquareIcon,
  TrashIcon
} from '@heroicons/react/24/outline';
import { {{ model }} } from '@/types';

type Props = {
  {{ modelLower }}: {{ model }};
};

const Show = ({ {{ modelLower }} }: Props) => {
  const [showEditModal, setShowEditModal] = useState(false);
  const [showDeleteModal, setShowDeleteModal] = useState(false);

  const form = useForm({
{{ formEditingState }}
  });

  const handleDelete = () => {
    router.delete(route('{{ modelLower }}s.destroy', {{ modelLower }}.id), {
      onSuccess: () => router.visit(route('{{ modelLower }}s.index'))
    });
  };

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    form.put(route('{{ modelLower }}s.update', {{ modelLower }}.id), {
      onSuccess: () => setShowEditModal(false)
    });
  };

  return (
    <div className="max-w-4xl mx-auto my-8">
      <div className="flex flex-wrap items-center justify-between sm:flex-nowrap mb-8">
        <Link href={route('{{ modelLower }}s.index')} className="flex items-center gap-2">
          <ChevronLeftIcon className="h-5 w-5" />
          <span>Back</span>
        </Link>
        <div className="flex gap-2">
          <Button variant="danger" className="inline-flex" style="outline" onClick={() => setShowDeleteModal(true)}>
            <TrashIcon className="h-5 w-5" />
            Delete
          </Button>
          <Button variant="primary" className="inline-flex" onClick={() => setShowEditModal(true)}>
            <PencilSquareIcon className="h-5 w-5" />
            Edit
          </Button>
        </div>
      </div>

      <div className="bg-white p-4 shadow rounded-lg">
{{ displayFields }}
      </div>

      <Modal isOpen={showEditModal} onClose={() => setShowEditModal(false)}>
        <form onSubmit={handleSubmit}>
          <ModalHeader>Edit {{ model }}</ModalHeader>
          <ModalBody>
{{ formFields }}
          </ModalBody>
          <ModalActions>
            <Button type="submit" className="ml-2" disabled={form.processing}>Update</Button>
            <Button variant="secondary" onClick={() => setShowEditModal(false)}>Cancel</Button>
          </ModalActions>
        </form>
      </Modal>

      <ConfirmModal
        isOpen={showDeleteModal}
        title="Delete {{ model }}"
        message="Are you sure you want to delete this {{ modelLower }}?"
        buttonLabel="Delete"
        buttonVariant="danger"
        onConfirm={handleDelete}
        onClose={() => setShowDeleteModal(false)}
      />
    </div>
  );
};

export default Show;
